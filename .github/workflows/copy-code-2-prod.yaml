name: Copy code to prod directories

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: 'Select input to update'
        required: true
        default: 'extraVars'
        options:
          - extraVars
          - inventory
          - deploymentManifest

jobs:
  update_and_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Create Branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'update-${{ github.event.inputs.choice }}-inputs'

      - name: Create prod directories if not exist
        run: |
          for dir in extraVars inventory deploymentManifest; do
            if [ ! -d "prod/$dir" ]; then
            mkdir -p "prod/$dir"
            touch "prod/$dir/README.md"
          fi
          done
          ls -l prod
      
      - name: Copy files to prod directories
        run: |
          for file in $(pwd)/non-prod/${{ github.event.inputs.choice }}/*.json; do
            cp "$file" "$(pwd)/prod/${{ github.event.inputs.choice }}/$(basename $file)"
          done
          ls -l $(pwd)/prod/${{ github.event.inputs.choice }}
      
      - name: Create, push new branch with template changes
        uses: EndBug/add-and-commit@v9
        with:
          cwd: 'prod/${{ github.event.inputs.choice }}'
          add: '.'
          default_author: github_actions
          message: 'fix: copy files to prod directory'
          new_branch: 'update-${{ github.event.inputs.choice }}-inputs'

      - name: Git Push
        run: git push origin update-${{ github.event.inputs.choice }}-inputs

      - name: Create Pull Request
        id: create_pr
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: main
          source_branch: update-${{ github.event.inputs.choice }}-inputs
          pr_title: "Automated update of ${{ github.event.inputs.choice }} dropdown inputs"
          github_token: ${{ secrets.ANAND_TESTING_TOKEN }}
          pr_label: "automerge"

      - name: Approve Pull Request
        if: steps.create_pr.outcome == 'success'
        id: approve_pr
        uses: juliangruber/approve-pull-request-action@v2.0.0
        with:
          github-token: ${{ secrets.ANIKET_TOKEN }}
          number: ${{ steps.create_pr.outputs.pr_number }}
          repo: ${{ github.repository }}

      - name: Merge Pull Request
        if: steps.create_pr.outcome == 'success' && steps.approve_pr.outcome == 'success'
        id: merge_pr
        uses: pascalgn/automerge-action@v0.15.5
        env:
          GITHUB_TOKEN: ${{ secrets.ANIKET_TOKEN }}
          PULL_REQUEST: ${{ github.repository }}/${{ steps.create_pr.outputs.pr_number }}
          UPDATE_METHOD: merge

      - name: Delete Merge Branch
        if: steps.merge_pr.outcome == 'success'
        uses: dawidd6/action-delete-branch@v3
        with:
          github_token: ${{ secrets.ANAND_TESTING_TOKEN }}
          owner: ${{ github.repository_owner }}
          repository: ${{ github.event.repository.name }}
          branches: ${{ steps.create_branch.outputs.branch }}
